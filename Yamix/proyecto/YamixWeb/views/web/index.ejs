<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <title>YAMIX</title>
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
    <meta content="Free Website Template" name="keywords">
    <meta content="Free Website Template" name="description">

    <!-- Favicon -->
    <link href="c/img/favicon.ico" rel="icon">

    <!-- Font Awesome -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.10.0/css/all.min.css" rel="stylesheet">

    <!-- Flaticon Font -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>

    <link rel="stylesheet" href="c/lib/flaticon/font/flaticon.css">


    <link href="c/lib/flaticon/font/flaticon.css" rel="stylesheet">



    <!-- Customized Bootstrap Stylesheet -->
    <link href="c/css/style.min.css" rel="stylesheet">
        <!-- Calendario scripts -->
 
         
</head>

<body class="bg-white">
   <!-- Navbar Start -->
<div class="container-fluid p-0 nav-bar">
  <%- include('partials/topbar') %>
</div>
<!-- Navbar End -->


    <!-- Carousel Start -->
    <div class="container-fluid p-0">
        <div id="blog-carousel" class="carousel slide" data-ride="carousel">
            <div class="carousel-inner">
                <div class="carousel-item active">
                    <img class="w-100" src="c/img/carousel-1.jpg" alt="Image">
                    <div class="carousel-caption d-flex flex-column align-items-center justify-content-center">
                        <h3 class="text-primary text-capitalize m-0">Yamix - academia</h3>
                        <h2 class="display-2 m-0 mt-2 mt-md-4 text-white font-weight-bold text-capitalize">¿Quieres Mejorarte?</h2>
                        <a href="/register" class="btn btn-lg btn-outline-light mt-3 mt-md-5 py-md-3 px-md-5">Inscríbete</a>
                    </div>
                </div>
                <div class="carousel-item">
                    <img class="w-100" src="c/img/carousel-2.jpg" alt="Image">
                    <div class="carousel-caption d-flex flex-column align-items-center justify-content-center">
                        <h3 class="text-primary text-capitalize m-0">Yamix - academia</h3>
                        <h2 class="display-2 m-0 mt-2 mt-md-4 text-white font-weight-bold text-capitalize"> ¿Quieres aprender?</h2>
                        <a href="/register" class="btn btn-lg btn-outline-light mt-3 mt-md-5 py-md-3 px-md-5">Inscríbete</a>
                    </div>
                </div>
            </div>
            <a class="carousel-control-prev" href="#blog-carousel" data-slide="prev">
                <span class="carousel-control-prev-icon"></span>
            </a>
            <a class="carousel-control-next" href="#blog-carousel" data-slide="next">
                <span class="carousel-control-next-icon"></span>
            </a>
        </div>
    </div>
    <!-- Carousel End -->


    <!-- Gym Class Start -->
    <div class="container gym-class mb-5">
        <div class="row px-3">
            <div class="col-md-6 p-0">
                <div class="gym-class-box d-flex flex-column align-items-end justify-content-center bg-primary text-right text-white py-5 px-5">
                    <i class="flaticon-six-pack"></i>
                    <h3 class="display-4 mb-3 text-white font-weight-bold">Amplia tu repertorio</h3>
                    <p>
                        En Yamix, ofrecemos un catálogo diverso de cursos diseñados para todos los niveles, desde principiantes hasta expertos. Nuestra programación incluye disciplinas de artes marciales mixtas (MMA), parkour y boxeo, impartidas por instructores altamente capacitados.
                    </p>
                    <a href="/register" class="btn btn-lg btn-outline-light mt-4 px-4">Inscríbete</a>
                </div>
            </div>
            <div class="col-md-6 p-0">
                <div class="gym-class-box d-flex flex-column align-items-start justify-content-center bg-secondary text-left text-white py-5 px-5">
                    <i class="flaticon-bodybuilding"></i>
                    <h3 class="display-4 mb-3 text-white font-weight-bold">Crea tu Potencial</h3>
                    <p>
                        Cada clase está pensada para fortalecer tu cuerpo, mente y habilidades, garantizando una formación completa en un ambiente dinámico y seguro. Únete a nosotros y mejora tu técnica, resistencia y confianza mientras aprendes de manera efectiva y divertida.
                    </p>
                    <a href="/register" class="btn btn-lg btn-outline-light mt-4 px-4">Inscríbete</a>
                </div>
            </div>
        </div>
    </div>
    <!-- Gym Class End -->


    <!-- About Start -->
    <div class="container py-5">
        <div class="row align-items-center">
            <div class="col-lg-6">
                <img class="img-fluid mb-4 mb-lg-0" src="c/img/about.jpg" alt="Image">
            </div>
            <div class="col-lg-6">
                <h2 class="display-4 font-weight-bold mb-4">10 Años De Experiencia</h2>
                <p>Nuestros instructores están altamente capacitados para guiarte a través de un entrenamiento completo.</p>
                <div class="row py-2">
                    <div class="col-sm-6">
                        <i class="flaticon-barbell display-2 text-primary"></i>
                        <h4 class="font-weight-bold">Gimnasio</h4>
                        <p>Cuenta gimnasio completamente equipado</p>
                    </div>
                    <div class="col-sm-6">
                        <i class="flaticon-medal display-2 text-primary"></i>
                        <h4 class="font-weight-bold">Unidad Deportiva</h4>
                        <p>Un lugar amplio para practicar todas las disciplinas.</p>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- About End -->

    
    <!-- Features Start -->
    <div class="container-fluid my-5">
        <div class="row">
            <div class="col-lg-4 p-0">
                <div class="d-flex align-items-center bg-secondary text-white px-5" style="min-height: 300px;">
                    <i class="flaticon-training display-3 text-primary mr-3"></i>
                    <div>
                        <h2 class="text-white mb-3">Progresion</h2>
                        <p>Un enfoque constante en tu evolución, mejorando tus habilidades en cada entrenamiento y alcanzando nuevas metas.</p>
                        <a href="" class="btn btn-lg btn-outline-light mt-4 px-4">Unete</a>
                    </div>
                </div>
            </div>
            <div class="col-lg-4 p-0">
                <div class="d-flex align-items-center bg-primary text-white px-5" style="min-height: 300px;">
                    <i class="flaticon-weightlifting display-3 text-secondary mr-3"></i>
                    <div class="">
                        <h2 class="text-white mb-3">Entrenamiento</h2>
                        <p>Entrena con propósito y dedicación. Diseñamos rutinas que te desafían a superar tus límites y mejorar tu rendimiento en cada sesión.
                        </p>
                        <a href="" class="btn btn-lg btn-outline-light mt-4 px-4">Unete</a>
                    </div>
                </div>
            </div>
            <div class="col-lg-4 p-0">
                <div class="d-flex align-items-center bg-secondary text-white px-5" style="min-height: 300px;">
                    <i class="flaticon-treadmill display-3 text-primary mr-3"></i>
                    <div class="">
                        <h2 class="text-white mb-3">Crecimiento</h2>
                        <p>Impulsa tu desarrollo personal y físico con cada entrenamiento. Enfócate en avanzar constantemente y alcanzar tu máximo potencial.
                        </p>
                        <a href="" class="btn btn-lg btn-outline-light mt-4 px-4">Unete</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <!-- Features End -->

      <div class="d-flex flex-column text-center mb-5">
        <h4 class="text-primary font-weight-bold">Eventos</h4>
        <h4 class="display-4 font-weight-bold">Aquí verás los próximos eventos</h4>
      </div>
 <!-- Servicios que Ofrecemos Start -->
<div id="servicesCarousel" class="carousel slide" data-ride="carousel" data-interval="3000">
    <!-- Indicadores -->
    <ol class="carousel-indicators" id="carouselIndicators"></ol>
  
    <!-- Contenido del carrusel -->
    <div class="carousel-inner" id="carouselItems"></div>
  
    <!-- Controles (flechas) -->
    <a class="carousel-control-prev" href="#servicesCarousel" role="button" data-slide="prev">
      <span class="carousel-control-prev-icon" aria-hidden="true"></span>
      <span class="sr-only">Previous</span>
    </a>
    <a class="carousel-control-next" href="#servicesCarousel" role="button" data-slide="next">
      <span class="carousel-control-next-icon" aria-hidden="true"></span>
      <span class="sr-only">Next</span>
    </a>
  </div>
  <!-- Servicios que Ofrecemos End -->
  <style>
    @import url("https://fonts.googleapis.com/css?family=Montserrat&display=swap");
        * {
          margin: 0;
          padding: 0;
          box-sizing: border-box;
          font-family: "Montserrat", sans-serif;
        }

        /*Cards*/
        .container-card {
          width: 100%;
          display: flex;
          max-width: 1100px;
          margin: auto;
        }
        .title-cards {
          width: 100%;
          max-width: 1080px;
          margin: auto;
          padding: 20px;
          margin-top: 20px;
          text-align: center;
          color: #7a7a7a;
        }
        .card {
        flex: 0 0 calc(33.33% - 40px); 
        max-width: calc(33.33% - 40px);
        margin: 20px; 
        border-radius: 6px;
        overflow: hidden;
        background: #fff;
        box-shadow: 0px 1px 10px rgba(0, 0, 0, 0.2);
        transition: all 400ms ease-out;
        cursor: default;
      }

        .card:hover {
          box-shadow: 5px 5px 20px rgba(0, 0, 0, 0.4);
          transform: translateY(-3%);
        }
        .card img {
          width: 100%;
          height: 210px;
        }
        .card .contenido-card {
          padding: 15px;
          text-align: center;
        }
        .card .contenido-card h3 {
          margin-bottom: 15px;
          color: #7a7a7a;
        }
        .card .contenido-card p {
          line-height: 1.8;
          color: #6a6a6a;
          font-size: 14px;
          margin-bottom: 5px;
        }
        .card .contenido-card a {
          display: inline-block;
          padding: 10px;
          margin-top: 10px;
          text-decoration: none;
          color: #e31c25;
          border: 1px solid #e31c25;
          border-radius: 4px;
          transition: all 400ms ease;
          margin-bottom: 5px;
        }
        .card .contenido-card a:hover {
          background: #e31c25;
          color: #fff;
        }
        @media only screen and (min-width: 320px) and (max-width: 768px) {
          .container-card {
            flex-wrap: wrap;
          }
          .card {
            margin: 15px;
          }
        }
  </style>
  
  <script>
   // Función para obtener eventos de la API y llenar el carrusel
   async function cargarEventos() {
    try {
      // Obtener eventos
      const responseEventos = await fetch('http://35.199.176.100/api/traer_eventosU');
      const eventos = await responseEventos.json();
  
      // Obtener cursos
      const responseCursos = await fetch('http://35.199.176.100/api/traer_cursos');
      const cursos = await responseCursos.json();
  
      // Contenedores para los indicadores y las tarjetas
      const carouselIndicators = document.getElementById('carouselIndicators');
      const carouselItems = document.getElementById('carouselItems');
  
      // Limpiar contenido previo (si existe)
      carouselIndicators.innerHTML = '';
      carouselItems.innerHTML = '';
  
      // Agrupar eventos en slides (3 por slide)
      const eventosPorSlide = 3;
      let slideIndex = 0;
  
      for (let i = 0; i < eventos.length; i += eventosPorSlide) {
        const eventosSlide = eventos.slice(i, i + eventosPorSlide);
  
        // Crear indicador
        const indicator = document.createElement('li');
        indicator.setAttribute('data-target', '#servicesCarousel');
        indicator.setAttribute('data-slide-to', slideIndex);
        if (slideIndex === 0) indicator.classList.add('active');
        carouselIndicators.appendChild(indicator);
  
        // Crear slide
        const carouselItem = document.createElement('div');
        carouselItem.classList.add('carousel-item');
        if (slideIndex === 0) carouselItem.classList.add('active');
  
        // Crear contenedor de tarjetas
        const containerCard = document.createElement('div');
        containerCard.classList.add('container-card');
  
        // Añadir tarjetas al slide
        eventosSlide.forEach((evento) => {
          // Encontrar el curso correspondiente al evento
          const curso = cursos.find((curso) => curso.id_curso === evento.id_curso);
          const imagenCurso = curso ? curso.link : 'default_image.jpg';
  
          // Crear tarjeta
          const card = document.createElement('div');
          card.classList.add('card');
  
          card.innerHTML = `
            <figure>
              <img src="${imagenCurso}" class="d-block w-100" alt="${evento.nombre_evento}" />
            </figure>
            <div class="contenido-card">
              <h3>${evento.nombre_evento}</h3>
              <p>${evento.descripcion}</p>
              <a href="javascript:void(0);" class="verDetalle" data-id="${evento.id_evento}">Ver detalle</a>
              <a href="/eventos">Leer Más</a>
            </div>
          `;
  
          containerCard.appendChild(card);
        });
  
        carouselItem.appendChild(containerCard);
        carouselItems.appendChild(carouselItem);
  
        slideIndex++;
      }

     // Añadir event listeners a los botones "Ver detalle"
     document.querySelectorAll('.verDetalle').forEach(button => {
            button.addEventListener('click', (e) => {
                const eventoId = e.target.getAttribute('data-id');
                mostrarDetallesModal(eventoId);
            });
        });

    } catch (error) {
        console.error('Error al cargar los eventos:', error);
    }
}

// Llamar a la función para cargar los eventos cuando se cargue la página
document.addEventListener('DOMContentLoaded', cargarEventos);

async function mostrarDetallesModal(eventoId) {
    try {
        const response = await fetch(`http://35.199.176.100/api/obtener_evento/${eventoId}`);
        const evento = await response.json();

        // Rellenar los campos de la modal con los datos del evento
        $('#detalleNombre').text(evento.nombre_evento || 'Sin nombre');
        $('#detalleDescripcion').text(evento.descripcion || 'Sin descripción');
        $('#detalleUbicacion').text(evento.ubicacion || 'Sin ubicación');
        $('#detalleFechaInicio').text(evento.fecha_hora_inicio ? moment(evento.fecha_hora_inicio).format('DD/MM/YYYY HH:mm') : 'Sin inicio');
        $('#detalleFechaFin').text(evento.fecha_hora_final ? moment(evento.fecha_hora_final).format('DD/MM/YYYY HH:mm') : 'Sin finalización');
        $('#detalleCurso').text(evento.nombre_curso || 'No asignado');

        // Mostrar la modal
        $('#modalVerDetalle').modal('show');
    } catch (error) {
        console.error('Error al obtener los detalles del evento:', error);
    }
}


$(document).ready(function() {
   
    $('#modalVerDetalle').on('hidden.bs.modal', function () {
    
    });

    
    $('.close, .btn-secondary').on('click', function() {
        $('#modalVerDetalle').modal('hide');
    });
});
  </script>
  
<style>
  .modal-header .close {
    color: #ff0000;  /* Rojo */
    font-size: 30px;  /* Aumentar tamaño de la X */
    opacity: 1;  /* Asegura que el color no tenga opacidad */
    transition: color 0.3s ease, transform 0.3s ease; /* Animación para cambio de color */
  }
  
  .modal-header .close:hover,
  .modal-header .close:focus {
    color: #c00;  /* Rojo más oscuro en hover */
    transform: scale(1.2);  /* Efecto de ampliación al pasar el mouse */
  }
  
  /* Estilo para el botón de "Cerrar" en el pie de la modal */
  .modal-footer .btn-secondary {
    background-color: #ff0000; /* Rojo de fondo */
    border: none;
    color: white;
    font-size: 16px;
    padding: 10px 20px;
    border-radius: 5px;
    transition: background-color 0.3s ease;
  }
  
  .modal-footer .btn-secondary:hover {
    background-color: #c00; /* Rojo más oscuro al pasar el mouse */
  }
  
  /* Añadir un borde redondeado a la modal */
  .modal-content {
    border-radius: 10px;
  }
</style>

<div class="modal fade" id="modalVerDetalle" tabindex="-1" role="dialog" aria-labelledby="modalVerDetalleLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
      <div class="modal-content">
          <div class="modal-header">
              <h5 class="modal-title" id="modalVerDetalleLabel">Detalle del Evento</h5>
              <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                  <span aria-hidden="true">&times;</span>
              </button>
          </div>
          <div class="modal-body">
              <div class="form-group">
                  <label class="col-sm-12 control-label">Nombre del Evento:</label>
                  <div class="col-sm-10">
                      <p id="detalleNombre" class="form-control-static"></p>
                  </div>
              </div>
              <div class="form-group">
                  <label class="col-sm-12 control-label">Curso:</label>
                  <div class="col-sm-10">
                      <p id="detalleCurso" class="form-control-static"></p>
                  </div>
              </div>

              <div class="form-group">
                  <label class="col-sm-12 control-label">Descripción:</label>
                  <div class="col-sm-10">
                      <p id="detalleDescripcion" class="form-control-static"></p>
                  </div>
              </div>

              <div class="form-group">
                  <label class="col-sm-12 control-label">Ubicación:</label>
                  <div class="col-sm-10">
                      <p id="detalleUbicacion" class="form-control-static"></p>
                  </div>
              </div>
                
              <div class="form-group">
                  <label class="col-sm-12 control-label">Fecha y Hora de Inicio:</label>
                  <div class="col-sm-10">
                      <p id="detalleFechaInicio" class="form-control-static"></p>
                  </div>
              </div>

              <div class="form-group">
                  <label class="col-sm-12 control-label">Fecha y Hora de Finalización:</label>
                  <div class="col-sm-10">
                      <p id="detalleFechaFin" class="form-control-static"></p>
                  </div>
              </div>

          
         
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-dismiss="modal">Cerrar</button>

          </div>
      </div>
  </div>
</div>

  <style>
    @import url("https://fonts.googleapis.com/css2?family=Ubuntu+Mono&display=swap");
  
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }
  
    /* Contenedor del carrusel */
    .carousel-container {
      display: flex;
      justify-content: center;
      align-items: center;
      position: relative;
      overflow: hidden; /* Para ocultar el contenido que sale fuera */
      width: 100%;
      padding: 20px 0;
    }
  
    .carousel-btn {
      position: absolute;
      top: 50%;
      transform: translateY(-50%);
      background-color: rgba(0, 0, 0, 0.5);
      color: white;
      border: none;
      font-size: 30px;
      cursor: pointer;
      z-index: 10;
      padding: 10px;
    }
  
    .prev-btn {
      left: 10px;
    }
  
    .next-btn {
      right: 10px;
    }
  
    .profile-container {
      display: flex;
      gap: 10px;
      transition: scroll 0.3s ease;
    }
  
    .profile-card {
      flex: 0 0 250px;
      border-radius: 0.5rem;
      transition: 0.5s ease-in-out;
      cursor: pointer;
      box-shadow: 1px 5px 15px #1e0e3e;
      position: relative;
      overflow: hidden;
      aspect-ratio: 1 / 1.5; /* Mantener proporción estándar */
      background-size: cover; /* Asegura que la imagen cubra todo el área */
      background-position: center; /* Centra la imagen */
      height: 400px;
    }
  
    .profile-content {
      font-size: 1.5rem;
      color: #fff;
      display: flex;
      align-items: center;
      padding: 15px;
      opacity: 0;
      flex-direction: column;
      height: 100%;
      justify-content: flex-end;
      background: linear-gradient(
        0deg,
        rgba(2, 2, 46, 0.6755077030812324) 0%,
        rgba(255, 255, 255, 0) 100%
      );
      transform: translateY(100%);
      transition: opacity 0.5s ease-in-out, transform 0.5s 0.2s;
      visibility: hidden;
    }
  
    .profile-content span {
      display: block;
      margin-top: 5px;
      font-size: 1.2rem;
    }
  
    .profile-card:hover {
      flex: 0 0 400px;
      box-shadow: 1px 3px 15px #7645d8;
      transform: translateY(-30px);
    }
  
    .profile-card:hover .profile-content {
      opacity: 1;
      transform: translateY(0%);
      visibility: visible;
    }
  </style>
<!-- Class Timetable Start -->
<div class="container gym-feature py-5">
    <div class="d-flex flex-column text-center mb-5">
        <h4 class="text-primary font-weight-bold">Horario de clases</h4>
        <h4 class="display-4 font-weight-bold">Cursos y instructores</h4>
    </div>
    <div class="tab-class">
        <ul class="nav nav-pills justify-content-center mb-4" id="courseNav">
            <!-- Los botones de filtro por curso se generarán aquí dinámicamente -->
        </ul>
        <div class="tab-content">
            <!-- Filtro por curso -->
            <div class="text-center mb-4">
                <button class="btn btn-primary" id="clearFilter">Mostrar todas las clases</button>
            </div>
            <!-- All Classes Tab -->
            <div id="class-all" class="container tab-pane p-0 active">
                <div class="table-responsive">
                    <table class="table table-bordered table-lg m-0">
                        <thead class="bg-secondary text-white text-center">
                            <tr>
                                <th>Horarios</th>
                                <th>Lunes</th>
                                <th>Martes</th>
                                <th>Miercoles</th>
                                <th>Jueves</th>
                                <th>Viernes</th>
                            </tr>
                        </thead>
                        <tbody class="text-center">
                            <!-- Placeholder for dynamically added content -->
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Class Timetable End -->

<script>
  let clasesGlobal = [];  


  async function fetchClases() {
      try {
          const response = await fetch('http://35.199.176.100/api/traerPara');
          const clases = await response.json();
          clasesGlobal = clases;  
  
      
          const tableBody = document.querySelector('#class-all tbody');
          tableBody.innerHTML = ''; 
  
        
          const diasSemana = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'];
  
       
          displayClasses(clases);
  
        
          createFilterButtons(clases);
  
      } catch (error) {
          console.error('Error al cargar las clases:', error);
      }
  }
  
  
  function createFilterButtons(clases) {
      const filterButtonsDiv = document.getElementById('courseNav');
      filterButtonsDiv.innerHTML = '';  
  
      const uniqueCursos = [...new Set(clases.map(clase => clase.nombre_curso))]; 
  
      uniqueCursos.forEach(curso => {
          const button = document.createElement('button');  
          button.classList.add('btn', 'btn-primary', 'm-1');  
          button.textContent = curso;
          button.addEventListener('click', (event) => {
              event.preventDefault();
              filterByCourse(curso);
          });
          filterButtonsDiv.appendChild(button);
      });
  }
  
  function filterByCourse(cursoName) {
      const filteredClasses = clasesGlobal.filter(clase => clase.nombre_curso === cursoName);
      displayClasses(filteredClasses);
  }
  
  
  document.getElementById('clearFilter').addEventListener('click', () => {
      displayClasses(clasesGlobal); 
  });
  
  
  function displayClasses(clases) {
      const tableBody = document.querySelector('#class-all tbody');
      tableBody.innerHTML = '';  
  
  
      const diasSemana = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'];
  
      clases.forEach(clase => {
          const row = document.createElement('tr');
  
          const timeCell = document.createElement('td');
          timeCell.textContent = clase.time;
  
          timeCell.style.backgroundColor = 'black';
          timeCell.style.color = 'white';
          timeCell.style.fontWeight = 'bold';
          timeCell.style.textAlign = 'center';
          row.appendChild(timeCell);
  
          diasSemana.forEach(dia => {
              const diaCell = document.createElement('td');
              const cursoInstructorDiv = document.createElement('div');
              const curso = document.createElement('div');
              curso.textContent = clase.nombre_curso;
              cursoInstructorDiv.appendChild(curso);
  
              const instructor = document.createElement('div');
              instructor.textContent = clase.nombre_usuario;
              cursoInstructorDiv.appendChild(instructor);
  
              diaCell.appendChild(cursoInstructorDiv);
              row.appendChild(diaCell);
          });
  
          tableBody.appendChild(row);
      });
  }
  
  
  fetchClases();
</script>

<script>
  document.addEventListener("DOMContentLoaded", async () => {
    try {
        const dataRolEstado = <%- JSON.stringify(dataRolEstado) %>;
        const clasesUsuario = dataRolEstado.clases || [];
        const clasesDisponibles = <%- JSON.stringify(clasesDisponibles) %>;

        console.log("Datos de rol y estado:", dataRolEstado);
        console.log("Clases del usuario:", clasesUsuario);
        console.log("Clases disponibles:", clasesDisponibles);

        // Traer las clases desde la API
        const response = await fetch("http://35.199.176.100/api/traer_clases");
        const clasesData = await response.json();

        // Agrupar las clases por curso
        const clasesPorCurso = clasesData.reduce((acc, clase) => {
            const cursoId = clase.id_curso;
            if (!acc[cursoId]) {
                acc[cursoId] = [];
            }
            acc[cursoId].push(clase);
            return acc;
        }, {});

        console.log("Clases agrupadas por curso:", clasesPorCurso);

        const groupedClasses = [];
        for (let i = 0; i < clasesDisponibles.length; i += 3) {
            groupedClasses.push(clasesDisponibles.slice(i, i + 3));
        }

        const indicators = document.querySelector("#carouselIndicators");
        const carouselInner = document.querySelector("#carouselInner");

        indicators.innerHTML = "";
        carouselInner.innerHTML = "";

        if (!groupedClasses.length) {
            const emptyMessage = `
                <div class="d-flex justify-content-center align-items-center" style="min-height: 300px;">
                    <h3 class="text-muted">No hay clases disponibles en este momento.</h3>
                </div>
            `;
            const slide = document.createElement("div");
            slide.classList.add("carousel-item", "active");
            slide.innerHTML = emptyMessage;
            carouselInner.appendChild(slide);
            return;
        }

        groupedClasses.forEach((group, groupIndex) => {
            const indicator = document.createElement("li");
            indicator.setAttribute("data-target", "#customCarousel");
            indicator.setAttribute("data-slide-to", groupIndex);
            if (groupIndex === 0) indicator.classList.add("active");
            indicators.appendChild(indicator);

            const slide = document.createElement("div");
            slide.classList.add("carousel-item");
            if (groupIndex === 0) slide.classList.add("active");

            const row = document.createElement("div");
            row.classList.add("row");

            group.forEach((clase, index) => {
                const col = document.createElement("div");
                col.classList.add("col-lg-4", "p-0");

                const isFirstStyle = index % 2 === 0;
                const bgClass = isFirstStyle ? "bg-secondary" : "bg-primary";
                const textClass = isFirstStyle ? "text-white" : "text-secondary";
                const iconClass = isFirstStyle ? "flaticon-training" : "flaticon-weightlifting";
                const iconColor = isFirstStyle ? "text-primary" : "text-secondary";
                const buttonClass = isFirstStyle ? "btn-outline-primary" : "btn-outline-secondary";

                // Obtener las clases del curso actual
                const clasesCurso = clasesPorCurso[clase.id_curso] || [];

                // Imprimir las clases asociadas a este curso para depurar
                console.log(`Clases del curso ${clase.nombre_curso}:`, clasesCurso);

                // Verificar si el usuario está inscrito en todas las clases de ese curso
                const allClassesOfCourseEnrolled = clasesCurso
                    .every(c => clasesUsuario.some(claseUsuario => String(claseUsuario.id_clase) === String(c.id_clase)));

                // Si el curso tiene solo una clase, asegurarse de que el usuario esté inscrito en ella
                const isSingleClassCourse = clasesCurso.length === 1;
                const allClassesOfCourseEnrolledFixed = isSingleClassCourse
                    ? clasesUsuario.some(claseUsuario => String(claseUsuario.id_curso) === String(clase.id_curso))
                    : allClassesOfCourseEnrolled;

                // Mostrar el botón "Unirse" si no está inscrito en todas las clases del curso y si el usuario está habilitado
                const showJoinButton = !!(dataRolEstado.id_rol && (dataRolEstado.id_rol === 1 || dataRolEstado.id_rol === 4) && dataRolEstado.estado === 'habilitado' && !allClassesOfCourseEnrolledFixed);

                // Mostrar el botón "Abandonar" solo si el usuario está inscrito en alguna de las clases de ese curso y si el usuario está habilitado
                const isEnrolledInClass = clasesUsuario.some(claseUsuario => String(claseUsuario.id_curso) === String(clase.id_curso));
                const showLeaveButton = !!(dataRolEstado.id_rol && isEnrolledInClass && dataRolEstado.estado === 'habilitado');

                // Imprimir el valor de showJoinButton para depurar
                console.log(`Mostrar botón Unirse para el curso ${clase.id_curso}: ${showJoinButton}`);

                // Imprimir el valor de showLeaveButton para depurar
                console.log(`Mostrar botón Abandonar para el curso ${clase.id_curso}: ${showLeaveButton}`);

                const content = `
                  <div class="d-flex align-items-center ${bgClass} ${textClass} px-5" style="min-height: 300px;">
                      <i class="${iconClass} display-3 ${iconColor} mr-3"></i>
                      <div>
                          <h2 class="${textClass} mb-3">${clase.nombre_curso}</h2>
                          <p>${clase.descripcion}</p>
                          ${showJoinButton ? `
                              <a href="#" class="btn btn-lg btn-outline-light mt-4 px-4" data-bs-toggle="modal" data-bs-target="#modalUnirse" data-id-curso="${clase.id_curso}">
                                  Unirse
                              </a>
                          ` : ''}
                          ${showLeaveButton ? `
                              <a href="#" class="btn ${buttonClass} btn-lg mt-4 px-4" data-bs-toggle="modal" data-bs-target="#modalAbandonar" data-id-curso="${clase.id_curso}">
                                  Abandonar
                              </a>
                          ` : ''}
                      </div>
                  </div>
              `;

                col.innerHTML = content;
                row.appendChild(col);
            });

            slide.appendChild(row);
            carouselInner.appendChild(slide);
        });
    } catch (error) {
        console.error("Error al cargar las clases:", error);
    }
});
</script>




<script>
  // Función para convertir hora de formato 24h a 12h con a.m./p.m.
function convertirHora(hora24) {
    const [hora, minutos] = hora24.split(":");
    const horaNumerica = parseInt(hora, 10);
    const amPm = horaNumerica >= 12 ? "p.m." : "a.m.";
    const hora12 = horaNumerica % 12 || 12;
    return `${hora12}:${minutos} ${amPm}`;
}

document.addEventListener("DOMContentLoaded", () => {
    // Manejador de eventos para la modal "Unirse"
    const modalUnirse = document.getElementById("modalUnirse");
    modalUnirse.addEventListener("show.bs.modal", async (event) => {
        const idCurso = event.relatedTarget.getAttribute("data-id-curso"); // Obtener el id_curso de la tarjeta
        try {
            const response = await fetch("http://35.199.176.100/api/traer_clases");
            const clases = await response.json();

            // Obtener las clases en las que el usuario ya está inscrito
            const clasesUsuario = <%- JSON.stringify(dataRolEstado.clases) %>; // Clases del usuario

            // Filtrar las clases que coincidan con el id_curso, estén activas, y el usuario no esté inscrito
            const clasesFiltradas = clases.filter(clase => 
                String(clase.id_curso) === idCurso && // La clase debe ser del curso
                clase.estado === "activo" && // La clase debe estar activa
                !clasesUsuario.some(c => String(c.id_clase) === String(clase.id_clase)) // El usuario no debe estar inscrito en esa clase
            );

            // Formatear las clases para el select
            const clasesFormateadas = clasesFiltradas.map(clase => ({
                id: clase.id_clase,
                texto: `${clase.nombre_curso} - ${convertirHora(clase.hora_inicio)} a ${convertirHora(clase.hora_final)}`
            }));

            // Llenar el select de la modal "Unirse"
            llenarSelect("#claseUnirse", clasesFormateadas);
        } catch (error) {
            console.error("Error al cargar las clases para unirse:", error);
        }
    });

    // Manejador de eventos para la modal "Abandonar"
    const modalAbandonar = document.getElementById("modalAbandonar");
    modalAbandonar.addEventListener("show.bs.modal", async (event) => {
        const idCurso = event.relatedTarget.getAttribute("data-id-curso"); // Obtener el id_curso de la tarjeta
        try {
            const response = await fetch("http://35.199.176.100/api/traer_clases");
            const clases = await response.json();

            // Filtrar las clases que sean del curso, estén activas, y el usuario esté inscrito
            const clasesUsuario = <%- JSON.stringify(dataRolEstado.clases) %>; // Clases del usuario

            const clasesFiltradas = clases.filter(clase => 
                String(clase.id_curso) === idCurso && // La clase debe ser del curso
                clase.estado === "activo" && // La clase debe estar activa
                clasesUsuario.some(c => String(c.id_clase) === String(clase.id_clase)) // El usuario debe estar inscrito en esa clase
            );

            // Formatear las clases para el select
            const clasesFormateadas = clasesFiltradas.map(clase => ({
                id: clase.id_clase,
                texto: `${clase.nombre_curso} - ${convertirHora(clase.hora_inicio)} a ${convertirHora(clase.hora_final)}`
            }));

            // Llenar el select de la modal "Abandonar"
            llenarSelect("#claseAbandonar", clasesFormateadas);
        } catch (error) {
            console.error("Error al cargar las clases para abandonar:", error);
        }
    });


// Manejador de envío para la modal "Unirse"
const formUnirse = document.getElementById("formUnirse");
formUnirse.addEventListener("submit", async (event) => {
    event.preventDefault();

    const idClase = document.getElementById("claseUnirse").value;  // Obtener el id de la clase seleccionada

    try {
        const response = await fetch("/agregarAclase", {
            method: "POST",
            headers: {
                "Content-Type": "application/json"
            },
            body: JSON.stringify({
                id_clase: idClase
            })
        });

        if (response.ok) {
            Swal.fire({
                icon: 'success',
                title: '¡Unido a la clase!',
                text: "Te has unido a la clase exitosamente!"
            }).then(() => {
                // Recargar la vista después de confirmar el mensaje
                location.reload();
            });
        } else {
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: "Hubo un error al intentar unirse."
            });
        }
    } catch (error) {
        console.error("Error al unirse a la clase:", error);
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: "Hubo un problema al intentar unirse a la clase. Intenta nuevamente."
        });
    }
});


    // Manejador de envío para la modal "Abandonar"
    const formAbandonar = document.getElementById("formAbandonar");
    formAbandonar.addEventListener("submit", async (event) => {
        event.preventDefault();

        const idClase = document.getElementById("claseAbandonar").value;  // Obtener el id de la clase seleccionada

        try {
            const response = await fetch("/eliminarDeClase", {
                method: "POST",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    id_clase: idClase
                })
            });

            if (response.ok) {
            Swal.fire({
                icon: 'warning',
                title: '¡Clase abandonada!',
                text: "Has abandonado la clase exitosamente!"
            }).then(() => {
                // Recargar la vista después de confirmar el mensaje
                location.reload();
            });
        } else {
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: "Hubo un error al intentar abandonar la clase."
            });
        }
    } catch (error) {
        console.error("Error al abandonar la clase:", error);
        Swal.fire({
            icon: 'error',
            title: 'Error',
            text: "Hubo un problema al intentar abandonar la clase. Intenta nuevamente."
        });
    }
    });
});

// Función para llenar un select con opciones
function llenarSelect(selector, opciones) {
    const select = document.querySelector(selector);
    if (!select) return;

    select.innerHTML = '<option value="" disabled selected>Seleccione una clase</option>';

    opciones.forEach(opcion => {
        const optionElement = document.createElement("option");
        optionElement.value = opcion.id;
        optionElement.textContent = opcion.texto;
        select.appendChild(optionElement);
    });
}

</script>


  <style>
    /* Reducir el tamaño de las flechas del carrusel */
.carousel-control-prev-icon,
.carousel-control-next-icon {
    width: 30px; /* Tamaño del icono */
    height: 30px; /* Tamaño del icono */
    background-size: 30px 30px; /* Ajustar el tamaño del fondo del icono */
}

/* Reducir el tamaño de las áreas de clic de las flechas */
.carousel-control-prev,
.carousel-control-next {
    width: 80px; /* Tamaño del área de clic */
    height: 100%; /* Tamaño del área de clic */
}

  </style>
  
<!-- Features Start -->
<div id="customCarousel" class="carousel slide" data-ride="carousel" data-interval="3000">
  <!-- Indicadores -->
  <ol class="carousel-indicators" id="carouselIndicators">
      <!-- Los indicadores se llenarán dinámicamente -->
  </ol>

  <!-- Slides -->
  <div class="carousel-inner" id="carouselInner">
      <!-- Los slides se llenarán dinámicamente -->
  </div>

  <!-- Controles del carrusel (flechas de navegación) -->
  <a class="carousel-control-prev" href="#customCarousel" role="button" data-slide="prev">
      <span class="carousel-control-prev-icon" aria-hidden="true"></span>
      <span class="sr-only">Previous</span>
  </a>
  <a class="carousel-control-next" href="#customCarousel" role="button" data-slide="next">
      <span class="carousel-control-next-icon" aria-hidden="true"></span>
      <span class="sr-only">Next</span>
  </a>
</div>
<!-- Features End -->



<!-- Modal para unirse -->
<div class="modal fade" id="modalUnirse" tabindex="-1" role="dialog" aria-labelledby="modalUnirseLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="modalUnirseLabel">Unirse a la Clase</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <form id="formUnirse">

          <!-- Campo de clase en el modal para unirse -->
          <div class="form-group">
            <label for="claseUnirse">Clase:</label>
            <select class="form-control" id="claseUnirse" name="claseUnirse" required>
                <option value="" disabled selected>Seleccione una clase</option>
            </select>
          </div>

          <!-- Botón de unirse -->
          <button type="submit" class="btn btn-outline-success">Unirse</button>
        </form>
      </div>
    </div>
  </div>
</div>

<!-- Modal para abandonar -->
<div class="modal fade" id="modalAbandonar" tabindex="-1" role="dialog" aria-labelledby="modalAbandonarLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="modalAbandonarLabel">Abandonar la Clase</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <form id="formAbandonar">

          <!-- Campo de clase en el modal para abandonar -->
          <div class="form-group">
            <label for="claseAbandonar">Clase:</label>
            <select class="form-control" id="claseAbandonar" name="claseAbandonar" required>
                <option value="" disabled selected>Seleccione una clase</option>
            </select>
          </div>

          <!-- Botón de abandonar -->
          <button type="submit" class="btn btn-outline-danger">Abandonar</button>
        </form>
      </div>
    </div>
  </div>
</div>






<style>
    @import url("https://fonts.googleapis.com/css2?family=Ubuntu+Mono&display=swap");
  
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }
  
    /* Contenedor del carrusel */
    .carousel-container {
      display: flex;
      justify-content: center;
      align-items: center;
      position: relative;
      overflow: hidden; /* Para ocultar el contenido que sale fuera */
      width: 100%;
      padding: 20px 0;
    }
  
    .carousel-btn {
      position: absolute;
      top: 50%;
      transform: translateY(-50%);
      background-color: rgba(0, 0, 0, 0.5);
      color: white;
      border: none;
      font-size: 30px;
      cursor: pointer;
      z-index: 10;
      padding: 10px;
    }
  
    .prev-btn {
      left: 10px;
    }
  
    .next-btn {
      right: 10px;
    }
  
    .profile-container {
      display: flex;
      gap: 10px;
      transition: scroll 0.3s ease;
    }
  
    .profile-card {
      flex: 0 0 250px;
      border-radius: 0.5rem;
      transition: 0.5s ease-in-out;
      cursor: pointer;
      box-shadow: 1px 5px 15px #1e0e3e;
      position: relative;
      overflow: hidden;
      aspect-ratio: 1 / 1.5; /* Mantener proporción estándar */
      background-size: cover; /* Asegura que la imagen cubra todo el área */
      background-position: center; /* Centra la imagen */
      height: 400px;
    }
  
    .profile-content {
      font-size: 1.5rem;
      color: #fff;
      display: flex;
      align-items: center;
      padding: 15px;
      opacity: 0;
      flex-direction: column;
      height: 100%;
      justify-content: flex-end;
      background: linear-gradient(
        0deg,
        rgba(2, 2, 46, 0.6755077030812324) 0%,
        rgba(255, 255, 255, 0) 100%
      );
      transform: translateY(100%);
      transition: opacity 0.5s ease-in-out, transform 0.5s 0.2s;
      visibility: hidden;
    }
  
    .profile-content span {
      display: block;
      margin-top: 5px;
      font-size: 1.2rem;
    }
  
    .profile-card:hover {
      flex: 0 0 400px;
      box-shadow: 1px 3px 15px #7645d8;
      transform: translateY(-30px);
    }
  
    .profile-card:hover .profile-content {
      opacity: 1;
      transform: translateY(0%);
      visibility: visible;
    }
  </style>


    <div class="container-fluid position-relative bmi my-5">
        <div class="container">
            <div class="row px-3 align-items-center">
                <div class="col-md-6">
                    <div class="pr-md-3 d-none d-md-block">
                        <h4 class="text-primary">Encuentra Nuestra Ubicación</h4>
                        <h4 class="display-4 text-white font-weight-bold mb-4">¿Dónde estamos ubicados?</h4>
                        <p class="m-0 text-white">Nos encontramos en el corazón de Copacabana, Antioquia. Usa el mapa de abajo para encontrar nuestra ubicación exacta y navega fácilmente.</p>
                    </div>
                </div>
                <div class="col-md-6 bg-secondary py-9">
                    <div class="py-5 px-10">
                        <h1 class="mb-4 text-white">Encuentranos</h1>
                        <iframe src="https://www.google.com/maps/embed?pb=!1m14!1m12!1m3!1d1982.690276998877!2d-75.51662944954418!3d6.344738771988914!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!5e0!3m2!1ses-419!2sco!4v1732388776022!5m2!1ses-419!2sco"width="100%" height="400" style="border:0;" allowfullscreen="" loading="lazy"></iframe> </iframe>
                    </div>
                </div>
            </div>
        </div>
    </div>

   

    <!-- Footer Start -->
    <%- include('partials/footer') %>
    <!-- Footer End -->


    <!-- Back to Top -->
    <a href="#" class="btn btn-outline-primary back-to-top"><i class="fa fa-angle-double-up"></i></a>


    <!-- JavaScript Libraries -->
     
    <script src="https://cdn.jsdelivr.net/npm/moment@2.29.1/moment.min.js"></script>
  
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>

    <script src="c/lib/easing/easing.min.js"></script>
    <script src="c/lib/waypoints/waypoints.min.js"></script>

    <!-- Contact Javascript File -->
    <script src="c/mail/jqBootstrapValidation.min.js"></script>
    <script src="c/mail/contact.js"></script>

    <!-- Template Javascript -->
    <script src="c/js/main.js"></script>
</body>

</html>