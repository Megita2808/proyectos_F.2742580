<!DOCTYPE html>
<html lang="en">

<head>
    <%- include('partials/head') %>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css">
    
        <style>
            .icon-btn {
                background-color: transparent;
                border: none;
                color: white;
                font-size: 1.2rem;
                cursor: pointer;
            }

            .icon-btn:hover {
                color: #ddd;
            }

            .switch {
            position: relative;
            display: inline-block;
            width: 50px;
            height: 25px;
            }

            .switch input {
            opacity: 0;
            width: 0;
            height: 0;
            }

            .slider {
            position: absolute;
            cursor: pointer;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: #ccc;
            transition: 0.4s;
            border-radius: 25px;
            }

            .slider:before {
            position: absolute;
            content: "";
            height: 19px;
            width: 19px;
            left: 3px;
            bottom: 3px;
            background-color: white;
            transition: 0.4s;
            border-radius: 50%;
            }

            input:checked + .slider {
            background-color: #2196F3;
        }
        
        input:checked + .slider:before {
            transform: translateX(25px);
        }
        </style>
        <%- include('partials/scripts') %>
        
        
<!-- Incluye los archivos CSS y JS de FullCalendar -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.10.2/fullcalendar.min.css" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/fullcalendar/3.10.2/fullcalendar.min.js"></script>

        <!-- Incluye las librerías necesarias para exportar a Excel y PDF -->
        <script src="https://cdn.jsdelivr.net/npm/xlsx/dist/xlsx.full.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/html2pdf.js@0.9.2/dist/html2pdf.bundle.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/jspdf@2.4.0/dist/jspdf.umd.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/jspdf-autotable@3.5.24/dist/jspdf.plugin.autotable.min.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/html2pdf.js@0.8.2/dist/html2pdf.bundle.min.js"></script>

        <!-- Enlace a SweetAlert2 desde un CDN -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.all.min.js"></script>



</head>

<body>
    <div class="container-scroller">
        <!-- partial:../../partials/_sidebar.html -->
        <nav class="sidebar sidebar-offcanvas" id="sidebar">
            <%- include('partials/sidebar') %>
        </nav>
        <!-- partial -->
        <div class="container-fluid page-body-wrapper">
            <!-- partial:../../partials/_navbar.html -->
            <nav class="navbar p-0 fixed-top d-flex flex-row">
                <%- include('partials/topbar') %>
            </nav>
            <!-- partial -->
            <div class="main-panel">
                <div class="content-wrapper">
                    <div class="col-lg-12 grid-margin stretch-card">
                        <div class="card">
                            <div class="card-body">
                                <div class="d-flex justify-content-between align-items-center">
                                    <h3 class="card-title">Otros Usuarios</h3>
                                    <div>
                                        <button id="exportPdf" class="btn btn-outline-secondary btn-fw">
                                            <i class="fas fa-file-pdf"></i> Exportar PDF
                                        </button>
                                        <button class="btn btn-outline-secondary btn-fw" onclick="exportToExcel()">
                                            <i class="fas fa-file-excel"></i> Exportar a Excel
                                        </button>
                                        <button class="btn btn-outline-secondary btn-fw" data-toggle="modal"
                                            data-target="#addModal">
                                            <i class="fas fa-plus"></i> Agregar
                                        </button>

                                    </div>
                                </div>
                                <div class="table-responsive">
                                    <table id="miTabla" class="table table-bordered">
                                        <thead>
                                            <tr>

                                                <th>#</th>

                                                <th>Nombre</th>
                                                <th>Apellidos</th>
                                                <th>Rol</th>
                                                <th>Correo</th>
                                                <th>Fecha de nacimiento</th>
                                                <th>Documentos</th>
                                                <th>Estado</th>
                                                <th>Acción</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <% if (Array.isArray(data) && data.length > 0) { %>
                                                <% 
                                                    // Filtramos los usuarios según su estado
                                                    const usuariosEstadoEspera = data.filter(usuario => usuario.estado === 'espera');
                                                    const usuariosEstadoHabilitado = data.filter(usuario => usuario.estado === 'habilitado');
                                                    const usuariosEstadoDeshabilitado = data.filter(usuario => usuario.estado === 'deshabilitado');
                                            
                                                    // Concatenamos los usuarios en el orden deseado
                                                    const usuariosOrdenados = [
                                                        ...usuariosEstadoEspera,
                                                        ...usuariosEstadoHabilitado,
                                                        ...usuariosEstadoDeshabilitado
                                                    ];
                                                %>
                                        
                                                <% usuariosOrdenados.forEach((usuario, index) => { %>
                                                    <% if (usuario.id_rol !== 2 && usuario.id_rol !== 1 && usuario.estado !== 'espera' && usuario.estado !== 'deshabilitado') { %>
                                                        <% if (usuario.id_usuario !== usuarioId) { %> <!-- Añadir la condición para no mostrar el usuario con el id igual al del token -->
                                                            <tr>
                                                                <td><%= index + 1 %></td>
                                                                <td><%= usuario.nombre %></td>
                                                                <td><%= usuario.apellido %></td>
                                                                <td><%= usuario.nombre_rol.charAt(0).toUpperCase() + usuario.nombre_rol.slice(1).toLowerCase() %></td>
                                                                <td><%= usuario.correo %></td>
                                                                <td>
                                                                    <% if (usuario.fecha_nacimiento) { %>
                                                                        <% 
                                                                            const fechaNacimiento = new Date(usuario.fecha_nacimiento);
                                                                            
                                                                            // Sumar un día a la fecha
                                                                            fechaNacimiento.setDate(fechaNacimiento.getDate() + 1);
                                                                            
                                                                            const dia = fechaNacimiento.getDate();
                                                                            const mes = fechaNacimiento.toLocaleString('es-ES', { month: 'long' }).charAt(0).toUpperCase() + fechaNacimiento.toLocaleString('es-ES', { month: 'long' }).slice(1);
                                                                            const año = fechaNacimiento.getFullYear();
                                                                            
                                                                            // Construimos la fecha en el formato deseado
                                                                            const fechaFinal = `${dia} de ${mes} del ${año}`; // "20 de Febrero del 2001"
                                                                        %>
                                                                        <%= fechaFinal %>
                                                                    <% } else { %>
                                                                        Sin fecha de nacimiento
                                                                    <% } %>
                                                                </td>
                                                                <td>
                                                                    <!-- Botón que abre el modal -->
                                                                    <button class="button-iconn" data-bs-toggle="modal" data-bs-target="#documentacion-<%= usuario.id_usuario %>" 
                                                                    >
                                                                    <i class="fas fa-plus"></i>
                                                                    </button>
                                                                </td>
                                                                <td><%= usuario.estado.charAt(0).toUpperCase() + usuario.estado.slice(1).toLowerCase() %></td>
                                                                <td>
                                                                    <!-- Botón para editar -->
                                                                    <button type="button" class="icon-btn" data-toggle="modal"
                                                                        data-target="#editModal"
                                                                        data-id_usuario="<%= usuario.id_usuario %>"
                                                                        data-nombre="<%= usuario.nombre %>"
                                                                        data-apellido="<%= usuario.apellido %>"
                                                                        data-fecha_nacimiento="<%= usuario.fecha_nacimiento %>"
                                                                        data-gmail="<%= usuario.correo %>"
                                                                        data-id_rol="<%= usuario.id_rol %>"
                                                                        data-estado="<%= usuario.estado %>">
                                                                        <i class="fas fa-edit"></i>
                                                                    </button>
                                                    
                                                                    <!-- Botón para deshabilitar (enviar la solicitud directamente) -->
                                                                    <% if (usuario.estado === 'habilitado') { %>
                                                                        <button type="button" class="icon-btn"
                                                                                data-id_usuario="<%= usuario.id_usuario %>"
                                                                                data-nombre="<%= usuario.nombre %>"
                                                                                data-apellido="<%= usuario.apellido %>"
                                                                                data-fecha_nacimiento="<%= usuario.fecha_nacimiento %>"
                                                                                data-gmail="<%= usuario.correo %>"
                                                                                data-id_rol="<%= usuario.id_rol %>"
                                                                                data-estado="deshabilitado"
                                                                                onclick="cambiarEstado(this)">
                                                                            <i class="mdi mdi-block-helper"></i>
                                                                        </button>
                                                                    <% } %>

                                                                    <!-- Botón para habilitar (enviar la solicitud directamente) -->
                                                                    <% if (usuario.estado === 'deshabilitado' || usuario.estado === 'espera') { %>
                                                                        <button type="button" class="icon-btn"
                                                                                data-id_usuario="<%= usuario.id_usuario %>"
                                                                                data-nombre="<%= usuario.nombre %>"
                                                                                data-apellido="<%= usuario.apellido %>"
                                                                                data-fecha_nacimiento="<%= usuario.fecha_nacimiento %>"
                                                                                data-gmail="<%= usuario.correo %>"
                                                                                data-id_rol="<%= usuario.id_rol %>"
                                                                                data-estado="habilitado"
                                                                                onclick="cambiarEstado(this)">
                                                                            <i class="mdi mdi-check-circle-outline"></i>
                                                                        </button>
                                                                    <% } %>
                                                                </td>
                                                            </tr>
                                                        <% } %> <!-- Cierra el if que filtra por id_usuario -->
                                                    <% } %>
                                                    <div class="modal fade" id="documentacion-<%= usuario.id_usuario %>" tabindex="-1" role="dialog" aria-labelledby="editEstudiantesModalLabel-<%= usuario.id_usuario %>" aria-hidden="true">
                                                        <div class="modal-dialog modal-lg" role="document">
                                                            <div class="modal-content">
                                                                <div class="modal-header">
                                                                    <h5 class="modal-title" id="editEstudiantesModalLabel">Documentación</h5>
                                                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                                                </div>
                                                                <div class="modal-body">
                                                                    <div class="row">
                                                                        <% if (usuario.documentos && usuario.documentos.length > 0) { %>
                                                                            <% usuario.documentos.forEach(function(doc, index) { %>
                                                                                <div class="col-md-6 mb-3">
                                                                                    <h6>PDF <%= index + 1 %></h6>
                                                                                    <iframe 
                                                                                        id="pdfViewer-<%= usuario.id_usuario %>-<%= index %>" 
                                                                                        src="http://35.199.176.100<%= doc.ruta_archivo %>" 
                                                                                        frameborder="0" 
                                                                                        style="width: 100%; height: 300px;">
                                                                                    </iframe>
                                                                                    <button 
                                                                                        type="button" 
                                                                                        class="btn btn-danger mt-2 btn-sm" 
                                                                                        onclick="eliminarDocumento(<%= doc.id_documento %>, <%= usuario.id_usuario %>)">
                                                                                        Eliminar
                                                                                    </button>
                                                                                <button 
                                                                                    type="button" 
                                                                                    class="btn btn-primary mt-2 btn-sm" 
                                                                                    onclick="editarDocumento('<%= doc.id_documento %>')">
                                                                                    Editar
                                                                                </button>
                                                                                
                                                                                <!-- Input de archivo -->
                                                                                <input 
                                                                                    type="file" 
                                                                                    id="editarDocumentoInput-<%= doc.id_documento %>" 
                                                                                    style="display: none;" 
                                                                                    onchange="enviarDocumento('<%= doc.id_documento %>', '<%= usuario.id_usuario %>')">
                                                                                
                                                                                </div>
                                                                            <% }); %>
                                                                        <% } else { %>
                                                                            <div class="col-12">
                                                                                <p>No hay documentos disponibles para este usuario.</p>
                                                                            </div>
                                                                        <% } %>
                                                                    </div>
                                                                    <hr />
                                                                    <div class="row">
                                                                        <div class="col-12">
                                                                            <h6>Agregar nuevos documentos</h6>
                                                                            <form id="uploadForm-<%= usuario.id_usuario %>">
                                                                                <% if (usuario && usuario.id_usuario) { %>
                                                                                    <input type="hidden" name="id_usuario" value="<%= usuario.id_usuario %>">
                                                                                <% } else { %>
                                                                                    <p style="color: red;">Error: No se encontró el ID de usuario.</p>
                                                                                <% } %>
                                                                                <div class="mb-3">
                                                                                    <label for="nuevoDocumento-<%= usuario.id_usuario %>" class="form-label">Seleccionar archivos:</label>
                                                                                    <input 
                                                                                        type="file" 
                                                                                        class="form-control" 
                                                                                        id="nuevoDocumento-<%= usuario.id_usuario %>" 
                                                                                        name="nuevoDocumento[]" 
                                                                                        multiple>
                                                                                </div>
                                                                                <button type="submit" class="btn btn-dark">Subir</button>
                                                                            </form>
                                                                            <ul id="fileList-<%= usuario.id_usuario %>" class="list-unstyled mt-3"></ul>
                                                                        </div>
                                                                    </div>                                                                  
                                                                </div>
                                                                <div class="modal-footer">
                                                                    <button type="button" class="btn btn-dark" data-bs-dismiss="modal">Cerrar</button>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                    <script>
                                                        // Selecciona el campo de entrada
                                                        const miau = document.getElementById('nuevoDocumento-<%= usuario.id_usuario %>');
                                                    
                                                        // Escucha el evento 'change' cuando se seleccionan archivos
                                                        miau.addEventListener('change', function () {
                                                            const validFiles = []; // Archivos válidos
                                                            const invalidFiles = []; // Archivos no válidos
                                                    
                                                            // Recorre los archivos seleccionados
                                                            Array.from(this.files).forEach(file => {
                                                                if (file.type !== 'application/pdf') {
                                                                    invalidFiles.push(file.name); // Agrega a la lista de no válidos
                                                                } else {
                                                                    validFiles.push(file); // Mantén los archivos válidos
                                                                }
                                                            });
                                                    
                                                            // Si hay archivos no válidos
                                                            if (invalidFiles.length > 0) {
                                                                // Usa SweetAlert para mostrar una alerta
                                                                Swal.fire({
                                                                    icon: 'error',
                                                                    title: 'Archivos inválidos',
                                                                    text: `Los siguientes archivos no son PDF y fueron eliminados: ${invalidFiles.join(', ')}`,
                                                                    confirmButtonText: 'Aceptar',
                                                                    timer: 5000
                                                                });
                                                    
                                                                // Reemplaza el campo con solo los archivos válidos
                                                                const dataTransfer = new DataTransfer();
                                                                validFiles.forEach(file => dataTransfer.items.add(file));
                                                                this.files = dataTransfer.files; // Actualiza los archivos seleccionados
                                                            }
                                                        });
                                                    </script>
                                                    <script>
                                                        
                                                        document.getElementById('uploadForm-<%= usuario.id_usuario %>').addEventListener('submit', function (event) {
                                                        event.preventDefault(); // Esto detiene el envío del formulario

                                                        const formData = new FormData(this);
                                                        const validFiles = [];
                                                        const invalidFiles = [];
                                                        
                                                        // Validar archivos antes de enviar
                                                        Array.from(formData.getAll('nuevoDocumento[]')).forEach(file => {
                                                            if (file.type === 'application/pdf') {
                                                                validFiles.push(file);
                                                            } else {
                                                                invalidFiles.push(file.name);
                                                            }
                                                        });

                                                        // Si hay archivos no válidos, muestra alerta y detén el envío
                                                        if (invalidFiles.length > 0) {
                                                            Swal.fire({
                                                                icon: 'error',
                                                                title: 'Archivos inválidos',
                                                                text: `Los siguientes archivos no son PDF y no se enviarán: ${invalidFiles.join(', ')}`,
                                                                confirmButtonText: 'Aceptar',
                                                                timer: 5000
                                                            });
                                                            return; // Detiene el proceso
                                                        }

                                                        // Crear nuevo FormData con solo los archivos válidos
                                                        const filteredFormData = new FormData();
                                                        filteredFormData.append('id_usuario', '<%= usuario.id_usuario %>'); // Asegúrate de incluir otros campos necesarios
                                                        validFiles.forEach(file => filteredFormData.append('nuevoDocumento[]', file));

                                                        fetch('/add_documento', {
                                                            method: 'POST',
                                                            body: filteredFormData
                                                        })
                                                            .then(response => {
                                                                if (response.ok) {
                                                                    Swal.fire({
                                                                        icon: 'success',
                                                                        title: 'Éxito',
                                                                        text: 'Archivos subidos exitosamente.',
                                                                        confirmButtonText: 'Aceptar'
                                                                    }).then(() => {
                                                                        window.location.reload(); // Recargar la página tras cerrar SweetAlert
                                                                    });
                                                                } else {
                                                                    Swal.fire({
                                                                        icon: 'error',
                                                                        title: 'Error',
                                                                        text: 'Hubo un problema al subir los archivos. Por favor, inténtalo de nuevo.',
                                                                        confirmButtonText: 'Cerrar'
                                                                    });
                                                                }
                                                            })
                                                            .catch(error => {
                                                                console.error('Error:', error);
                                                                Swal.fire({
                                                                    icon: 'error',
                                                                    title: 'Error crítico',
                                                                    text: 'Ocurrió un error inesperado. Por favor, verifica tu conexión o contacta al soporte.',
                                                                    confirmButtonText: 'Cerrar'
                                                                });
                                                            });
                                                        });                                                         
                                                    </script>   
                                                    <script>
                                                        const fileInput = document.getElementById('nuevoDocumento-<%= usuario.id_usuario %>');
                                                        const fileList = document.getElementById('fileList-<%= usuario.id_usuario %>');
                                                        const dt = new DataTransfer(); // Usado para almacenar los archivos seleccionados acumulados
                                                    
                                                        fileInput.addEventListener('change', () => {
                                                            Array.from(fileInput.files).forEach(file => {
                                                                // Agregar cada archivo al DataTransfer
                                                                dt.items.add(file);
                                                    
                                                                // Crear un elemento en la lista
                                                                const listItem = document.createElement('li');
                                                                listItem.className = 'd-flex align-items-center mb-2';
                                                                listItem.innerHTML = `
                                                                    <span class="me-2">${file.name} (${(file.size / 1024).toFixed(2)} KB)</span>
                                                                    <button class="btn btn-sm btn-danger ms-auto" type="button">X</button>
                                                                `;
                                                    
                                                                // Eliminar archivo de la lista
                                                                listItem.querySelector('button').addEventListener('click', () => {
                                                                    removeFile(file.name);
                                                                    listItem.remove();
                                                                });
                                                    
                                                                fileList.appendChild(listItem);
                                                            });
                                                    
                                                            // Actualizar el input de archivos con el acumulado
                                                            fileInput.files = dt.files;
                                                        });
                                                    
                                                        function removeFile(fileName) {
                                                            const newDt = new DataTransfer();
                                                            Array.from(dt.files).forEach(file => {
                                                                if (file.name !== fileName) {
                                                                    newDt.items.add(file); // Conservar los archivos que no se eliminaron
                                                                }
                                                            });
                                                            dt.items.clear(); // Limpiar DataTransfer original
                                                            Array.from(newDt.files).forEach(file => dt.items.add(file)); // Agregar los restantes
                                                            fileInput.files = dt.files; // Actualizar el input
                                                        }
                                                    </script> 
                                                                                              
                                                <% }) %>
                                            <% } else { %>
                                                <tr>
                                                    <td colspan="9" class="text-center">No hay usuarios disponibles.</td>
                                                </tr>
                                            <% } %>
                                        </tbody>
                                    </table>                                                                                                         
                                </div>
                            </div>
                        </div>
                    </div>

                    
                    
                    
                    
                    <!-- Modal editar -->
                    <div class="modal fade" id="editModal" tabindex="-1" role="dialog" aria-labelledby="editModalLabel" aria-hidden="true">
                        <div class="modal-dialog" role="document">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="editModalLabel">Editar Usuario</h5>
                                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                        <span aria-hidden="true">&times;</span>
                                    </button>
                                </div>
                                <div class="modal-body">
                                    <form id="editForm" method="post" action="/editar_usuario">
                                        <input type="hidden" name="id_usuario" id="editIdUsuario" />
                                        <div class="form-group row">
                                            <label for="editRol" class="col-sm-3 col-form-label">Rol</label>
                                            <div class="col-sm-9">
                                                <select class="form-control" name="id_rol" id="editRol" required>
                                                    <% if (roles && roles.length) { %>
                                                        <% roles.forEach(function(rol) { %>
                                                            <option value="<%= rol.id_rol %>">
                                                                <%= rol.nombre_rol.charAt(0).toUpperCase() + rol.nombre_rol.slice(1).toLowerCase() %>
                                                            </option>
                                                        <% }); %>
                                                    <% } else { %>
                                                        <option value="">No hay roles disponibles</option>
                                                    <% } %>
                                                </select>
                                            </div>
                                        </div>

                                        <div class="form-group row">
                                            <label for="editNombre" class="col-sm-3 col-form-label">Nombre</label>
                                            <div class="col-sm-9">
                                                <input type="text" name="nombre" class="form-control" id="editNombre" placeholder="Nombre" required>
                                            </div>
                                        </div>

                                        <div class="form-group row">
                                            <label for="editApellido" class="col-sm-3 col-form-label">Apellidos</label>
                                            <div class="col-sm-9">
                                                <input type="text" name="apellido" class="form-control" id="editApellido" placeholder="Apellidos" required>
                                            </div>
                                        </div>

                                        <div class="form-group row">
                                            <label for="editFechaNacimiento" class="col-sm-3 col-form-label">Fecha de nacimiento</label>
                                            <div class="col-sm-9">
                                                <input type="date" name="fecha_nacimiento" class="form-control" id="editFechaNacimiento" required>
                                                <div id="editEdadError" class="invalid-feedback" style="display: none;">
                                                    La edad debe estar entre 8 y 65 años.
                                                </div>
                                            </div>
                                        </div>

                                        <div class="form-group row">
                                            <label for="editCorreo" class="col-sm-3 col-form-label">Correo</label>
                                            <div class="col-sm-9">
                                                <input type="email" name="correo" class="form-control" id="editCorreo" placeholder="Correo" required>
                                                <div id="editCorreoError" class="invalid-feedback" style="display: none;">
                                                    El correo ya está en uso.
                                                </div>
                                            </div>
                                        </div>

                                        <div class="form-group row" style="display: none;">
                                            <select class="form-control" id="editEstado" name="estado">
                                                <option value="espera" <%= typeof estado !== 'undefined' && estado === 'espera' ? 'selected' : '' %>>Espera</option>
                                                <option value="habilitado" <%= typeof estado !== 'undefined' && estado === 'habilitado' ? 'selected' : '' %>>Habilitado</option>
                                                <option value="deshabilitado" <%= typeof estado !== 'undefined' && estado === 'deshabilitado' ? 'selected' : '' %>>Deshabilitado</option>
                                            </select>
                                        </div>

                                        <div class="modal-footer">
                                            <button type="button" class="btn btn-dark mr-2" data-dismiss="modal">Cancelar</button>
                                            <button type="submit" class="btn btn-dark">Guardar Cambios</button>
                                        </div>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>


                    


                    <!-- Modal agregar -->
                    <div class="modal fade" id="addModal" tabindex="-1" role="dialog" aria-labelledby="addModalLabel" aria-hidden="true">
                        <div class="modal-dialog" role="document">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="addModalLabel">Agregar Usuario</h5>
                                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                        <span aria-hidden="true">&times;</span>
                                    </button>
                                </div>
                                <div class="modal-body">
                                    <!-- Contenedor para mensajes de error -->
                                    <div id="error-message" class="alert alert-danger" style="display: none;"></div>

                                    <!-- Formulario -->
                                    <form method="post" action="/agregar_usuario" id="addForm">
                                        <!-- Selección de rol -->
                                        <div class="form-group row">
                                            <label for="addRol" class="col-sm-3 col-form-label">Rol</label>
                                            <div class="col-sm-9">
                                                <select class="form-control" name="id_rol" id="addRol" required>
                                                    <% if (roles && roles.length) { %>
                                                        <% roles.forEach(function(rol) { %>
                                                            <option value="<%= rol.id_rol %>">
                                                                <%= rol.nombre_rol.charAt(0).toUpperCase() + rol.nombre_rol.slice(1).toLowerCase() %>
                                                            </option>
                                                        <% }); %>
                                                    <% } else { %>
                                                        <option value="">No hay roles disponibles</option>
                                                    <% } %>
                                                </select>
                                            </div>
                                        </div>

                                        <!-- Campos de usuario -->
                                        <div class="form-group row">
                                            <label for="addNombre" class="col-sm-3 col-form-label">Nombre</label>
                                            <div class="col-sm-9">
                                                <input type="text" name="nombre" class="form-control" id="addNombre" placeholder="Nombre" required>
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <label for="addApellido" class="col-sm-3 col-form-label">Apellidos</label>
                                            <div class="col-sm-9">
                                                <input type="text" name="apellido" class="form-control" id="addApellido" placeholder="Apellidos" required>
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <label for="addFechaNacimiento" class="col-sm-3 col-form-label">Fecha de nacimiento</label>
                                            <div class="col-sm-9">
                                                <input type="date" name="fecha_nacimiento" class="form-control" id="addFechaNacimiento" required>
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <label for="addCorreo" class="col-sm-3 col-form-label">Correo</label>
                                            <div class="col-sm-9">
                                                <input type="email" name="correo" class="form-control" id="addCorreo" placeholder="Correo" required>
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <label for="addContrasena" class="col-sm-3 col-form-label">Contraseña</label>
                                            <div class="col-sm-9">
                                                <div class="input-group">
                                                    <input type="password" name="contrasena" class="form-control" id="addContrasena" placeholder="Contraseña" required minlength="6">
                                                    <div class="input-group-append">
                                                        <span class="input-group-text" id="togglePassword" style="cursor: pointer;">
                                                            <i class="fas fa-eye" id="password-eye"></i>
                                                        </span>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <label for="addConfirmarContrasena" class="col-sm-3 col-form-label">Confirmar Contraseña</label>
                                            <div class="col-sm-9">
                                                <div class="input-group">
                                                    <input type="password" name="confirmar_contrasena" class="form-control" id="addConfirmarContrasena" placeholder="Confirmar Contraseña" required minlength="6">
                                                    <div class="input-group-append">
                                                        <span class="input-group-text" id="toggleConfirmPassword" style="cursor: pointer;">
                                                            <i class="fas fa-eye" id="confirm-password-eye"></i>
                                                        </span>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="form-group row">
                                            <!-- Estado ya no está visible en el formulario, se envía "habilitado" por defecto -->
                                            <input type="hidden" name="estado" value="habilitado">
                                        </div>


                                        

                                        <!-- Botones del modal -->
                                        <div class="modal-footer">
                                            <button type="button" class="btn btn-dark mr-2" data-dismiss="modal">Cancelar</button>
                                            <button type="submit" class="btn btn-dark">Guardar</button>
                                        </div>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>





                    <!-- content-wrapper ends -->
                    <!-- partial:../../partials/_footer.html -->
              
                    <!-- partial -->
                </div>
                <!-- main-panel ends -->
            </div>
            <!-- page-body-wrapper ends -->
        </div>
        <!-- container-scroller -->
        <!-- plugins:js -->
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>1
        
        
        <script>
            // Mostrar el input de archivo al presionar el botón Editar
            function editarDocumento(id_documento) {
                const fileInput = document.getElementById(`editarDocumentoInput-${id_documento}`);
                if (fileInput) {
                    fileInput.click(); // Simula un clic en el input para abrir el selector de archivos
                }
            }
        
            // Enviar el archivo seleccionado al controlador
            function enviarDocumento(id_documento, id_usuario) {
                const fileInput = document.getElementById(`editarDocumentoInput-${id_documento}`);
                const file = fileInput.files[0]; // Obtiene el archivo seleccionado
        
                if (!file) {
                    Swal.fire('Error', 'Por favor selecciona un archivo antes de enviar.', 'error');
                    return;
                }
        
                // Validar que sea un archivo PDF
                if (file.type !== 'application/pdf') {
                    Swal.fire('Error', 'Solo se permiten archivos PDF.', 'error');
                    fileInput.value = ''; // Limpia el archivo no válido
                    return;
                }
        
                // Confirmación por parte del usuario antes de enviar
                Swal.fire({
                    title: '¿Estás seguro?',
                    text: "Se actualizará el documento seleccionado.",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonText: 'Sí, actualizar',
                    cancelButtonText: 'Cancelar'
                }).then((result) => {
                    if (result.isConfirmed) {
                        // Crear un FormData para enviar el archivo
                        const formData = new FormData();
                        formData.append('documento', file); // Archivo
                        formData.append('id_usuario', id_usuario); // ID del usuario
        
                        // Bloquear la interfaz mientras se realiza la operación
                        Swal.fire({
                            title: 'Subiendo archivo...',
                            text: 'Por favor espera.',
                            icon: 'info',
                            allowOutsideClick: false,
                            showConfirmButton: false,
                            didOpen: () => {
                                Swal.showLoading();
                            }
                        });
        
                        fetch(`http://35.199.176.100/api/update-doc/${id_documento}`, {
                            method: 'PUT',
                            body: formData,
                        })
                            .then(response => {
                                // Verificar si la respuesta es JSON válida
                                const contentType = response.headers.get('content-type');
                                if (contentType && contentType.includes('application/json')) {
                                    return response.json();
                                } else {
                                    throw new Error('La respuesta no es JSON válida.');
                                }
                            })
                            .then(data => {
                                if (data.error) {
                                    Swal.fire('Error', data.error, 'error');
                                } else {
                                    Swal.fire('Éxito', 'Documento actualizado correctamente.', 'success').then(() => {
                                        location.reload(); // Recarga la página tras éxito
                                    });
                                }
                            })
                            .catch(error => {
                                console.error('Error:', error);
                                Swal.fire('Error', 'Hubo un problema al actualizar el documento.', 'error');
                            });
                    }
                });
            }
        </script>
        
              
               
        <script>
            function eliminarDocumento(id_documento) {
                Swal.fire({
                    title: '¿Estás seguro?',
                    text: "¡No podrás revertir esto!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Sí, eliminar',
                    cancelButtonText: 'Cancelar'
                }).then((result) => {
                    if (result.isConfirmed) {
                        fetch(`http://35.199.176.100/api/delete-document/${id_documento}`, {
                            method: 'DELETE',
                            headers: { 'Content-Type': 'application/json' }
                        })
                        .then(response => response.json())
                        .then(data => {
                            if (data.message) { // Revisa si la respuesta del servidor incluye 'message'
                                Swal.fire(
                                    '¡Eliminado!',
                                    'El documento ha sido eliminado correctamente.',
                                    'success'
                                ).then(() => {
                                    const modal = document.querySelector('.modal.show');
                                    if (modal) {
                                        const bootstrapModal = bootstrap.Modal.getInstance(modal);
                                        if (bootstrapModal) {
                                            bootstrapModal.hide();
                                        }
                                    }
                                    location.reload(); // Recargar la página
                                });
                            } else {
                                Swal.fire(
                                    'Error',
                                    'Hubo un problema al eliminar el documento: ' + (data.error || 'Desconocido'),
                                    'error'
                                );
                            }
                        })
                        .catch(error => {
                            Swal.fire(
                                'Error',
                                'Ocurrió un error al procesar tu solicitud.',
                                'error'
                            );
                            console.error('Error:', error);
                        });
                    }
                });
            }
        </script>
        
              
            <!-- Asegúrate de tener estos enlaces en el <head> o justo antes de cerrar el body -->
                <script>
                    $('#documentacion').on('show.bs.modal', function (event) {
                        var button = $(event.relatedTarget); // El botón que activa el modal
                        var pdfUrl1 = button.data('url1');   // Obtiene la URL del PDF 1
                        
                        var modal = $(this);
                        modal.find('#pdfViewer1').attr('src', pdfUrl1); // Actualiza el iframe con la URL del archivo PDF
                    
                        // Si tienes un segundo PDF o más, puedes hacer lo mismo:
                        var pdfUrl2 = button.data('url2');
                        modal.find('#pdfViewer2').attr('src', pdfUrl2);
                    });                    
                </script>
                
                <script>
                    document.addEventListener('DOMContentLoaded', function () {
                        // Elementos del DOM
                        const togglePassword = document.getElementById("togglePassword");
                        const passwordField = document.getElementById("addContrasena");
                        const toggleConfirmPassword = document.getElementById("toggleConfirmPassword");
                        const confirmPasswordField = document.getElementById("addConfirmarContrasena");
                        const fechaNacimientoInput = document.getElementById('addFechaNacimiento');
                        const errorMessage = document.getElementById('error-message');
                        const addForm = document.getElementById('addForm');
                        
                        // Expresión regular para la contraseña
                        const passwordRegex = /^(?=.*[a-zA-Z])(?=.*\d)(?=.*[!@#$%^&*])[A-Za-z\d!@#$%^&*]{6,}$/;
                
                        // Configuración de rango de edad
                        const minAge = 8;
                        const maxAge = 65;
                
                        // Función para alternar la visibilidad de las contraseñas
                        function togglePasswordVisibility(field, eyeIconId) {
                            const type = field.type === "password" ? "text" : "password";
                            field.type = type;
                            const icon = field.type === "password" ? "fa-eye" : "fa-eye-slash";
                            document.getElementById(eyeIconId).classList.replace(field.type === "password" ? "fa-eye-slash" : "fa-eye", icon);
                        }
                
                        // Event listeners para alternar visibilidad
                        togglePassword.addEventListener("click", () => togglePasswordVisibility(passwordField, "password-eye"));
                        toggleConfirmPassword.addEventListener("click", () => togglePasswordVisibility(confirmPasswordField, "confirm-password-eye"));
                
                        // Validación de edad
                        function validateAge() {
                            const fechaNacimiento = new Date(fechaNacimientoInput.value);
                            if (isNaN(fechaNacimiento)) {
                                errorMessage.style.display = 'block';
                                errorMessage.textContent = 'Por favor, introduce una fecha válida.';
                                return false;
                            }
                
                            const hoy = new Date();
                            let edad = hoy.getFullYear() - fechaNacimiento.getFullYear();
                            const mesDiferencia = hoy.getMonth() - fechaNacimiento.getMonth();
                            if (mesDiferencia < 0 || (mesDiferencia === 0 && hoy.getDate() < fechaNacimiento.getDate())) {
                                edad--;
                            }
                
                            if (edad < minAge || edad > maxAge) {
                                errorMessage.style.display = 'block';
                                errorMessage.textContent = `La edad debe estar entre ${minAge} y ${maxAge} años.`;
                                return false;
                            } else {
                                errorMessage.style.display = 'none';
                                return true;
                            }
                        }
                
                        fechaNacimientoInput.addEventListener('input', validateAge);
                
                        // Validación al enviar el formulario
                        addForm.addEventListener('submit', function (event) {
                            event.preventDefault(); // Evitar envío por defecto del formulario
                
                            const correo = document.getElementById('addCorreo').value;
                            const contrasena = passwordField.value;
                            const confirmPassword = confirmPasswordField.value;
                
                            // Verifica si las contraseñas coinciden
                            if (contrasena !== confirmPassword) {
                                errorMessage.textContent = 'Las contraseñas no coinciden. Por favor, inténtalo de nuevo.';
                                errorMessage.style.display = 'block';
                                return;
                            }
                
                            // Verifica que la contraseña cumpla con el patrón
                            if (!passwordRegex.test(contrasena)) {
                                errorMessage.textContent = 'La contraseña debe contener al menos una letra, un número y un carácter especial.';
                                errorMessage.style.display = 'block';
                                return;
                            }
                
                            // Validar la edad
                            if (!validateAge()) {
                                return;
                            }
                
                            // Verificar correo con AJAX
                            $.ajax({
                                url: 'http://35.199.176.100/api/verificar_correo',
                                type: 'POST',
                                data: { correo: correo },
                                success: function (response) {
                                    if (response.existe) {
                                        $('#error-message').text('El correo ya está en uso.').show();
                                    } else {
                                        // Enviar el formulario si todo es válido
                                        $.ajax({
                                            url: addForm.getAttribute('action'),
                                            type: 'POST',
                                            data: $(addForm).serialize(),
                                            success: function () {
                                                $('#addModal').modal('hide');
                                                location.reload();
                                            },
                                            error: function () {
                                                $('#error-message').text('Ocurrió un error al agregar el usuario.').show();
                                            }
                                        });
                                    }
                                },
                                error: function () {
                                    $('#error-message').text('Ocurrió un error al verificar el correo.').show();
                                }
                            });
                        });
                    });
                </script>
                               
                          
            

                          <script>
                            function cambiarEstado(button) {
                                var id_usuario = $(button).data('id_usuario');
                                var nombre = $(button).data('nombre');
                                var apellido = $(button).data('apellido');
                                var fecha_nacimiento = $(button).data('fecha_nacimiento');
                                var gmail = $(button).data('gmail');
                                var estado = $(button).data('estado'); // El estado (habilitado o deshabilitado)
                                var id_rol = $(button).data('id_rol');
                                
                                // Crear un objeto con los datos a enviar
                                var dataToSend = {
                                    id_usuario: id_usuario,
                                    nombre: nombre,
                                    apellido: apellido,
                                    fecha_nacimiento: fecha_nacimiento,
                                    correo: gmail,
                                    estado: estado,  // Estado nuevo (habilitado o deshabilitado)
                                    id_rol: id_rol,
                                };
                                
                                console.log(id_usuario, nombre, apellido, fecha_nacimiento, gmail, estado, id_rol);
                        
                                // Enviar los datos con AJAX
                                $.ajax({
                                    url: '/editar_usuario/' + id_usuario,  // Usar la misma ruta que el formulario de edición
                                    type: 'POST',
                                    data: dataToSend, // Enviar solo los campos que tienen valores válidos
                                    success: function(response) {
                                        // Usar SweetAlert para la alerta de éxito
                                        Swal.fire({
                                            icon: 'success',
                                            title: '¡Éxito!',
                                            text: 'Estado actualizado correctamente.',
                                            confirmButtonText: 'Aceptar'
                                        }).then(() => {
                                            // Recargar la página después de la alerta
                                            location.reload();  // Recargar la página (opcional)
                                        });
                                    },
                                    error: function(xhr, status, error) {
                                        console.error('Error al cambiar el estado:', error);
                                        
                                        // Usar SweetAlert para la alerta de error
                                        Swal.fire({
                                            icon: 'error',
                                            title: 'Error',
                                            text: 'Hubo un problema al actualizar el estado.',
                                            confirmButtonText: 'Aceptar'
                                        });
                                    }
                                });
                            }
                        </script>
                        
                        
                        
            
            
            
                        <script>
                            $(document).ready(function () {
                                // Manejo del evento para abrir la modal y llenar los campos
                                $('#editModal').on('show.bs.modal', function (event) {
                                    var button = $(event.relatedTarget); // Botón que activó el modal
                                    var id_usuario = button.data('id_usuario');
                                    var nombre = button.data('nombre');
                                    var apellido = button.data('apellido');
                                    var fecha_nacimiento = button.data('fecha_nacimiento');
                                    var gmail = button.data('gmail');
                                    var estado = button.data('estado');
                                    var id_rol = button.data('id_rol');
                        
                                    var modal = $(this);
                        
                                    // Asignar los valores al modal
                                    modal.find('.modal-body #editIdUsuario').val(id_usuario);
                                    modal.find('.modal-body #editNombre').val(nombre);
                                    modal.find('.modal-body #editApellido').val(apellido);
                                    modal.find('.modal-body #editFechaNacimiento').val(fecha_nacimiento);
                                    modal.find('.modal-body #editCorreo').val(gmail);
                                    modal.find('.modal-body #editEstado').val(estado);
                                    modal.find('.modal-body #editRol').val(id_rol); // Establecer el rol seleccionado
                        
                                   
                                    // Establecer la acción del formulario para incluir el ID del usuario
                                    modal.find('#editForm').attr('action', '/editar_usuario/' + id_usuario);
                                });
                        
                                // Manejo del evento para enviar el formulario de edición
                                document.getElementById('editForm').addEventListener('submit', function(e) {
                                    e.preventDefault(); // Evita que el formulario se envíe automáticamente
                        
                                    const fechaNacimiento = document.getElementById('editFechaNacimiento').value;
                                    const email = document.getElementById('editCorreo').value;
                                    const idUsuario = document.getElementById('editIdUsuario').value;
                        
                                    // Validación de la edad
                                    const edad = calcularEdad(fechaNacimiento);
                        
                                    if (edad < 8 || edad > 65) {
                                        document.getElementById('editEdadError').style.display = 'block';
                                        document.getElementById('editFechaNacimiento').classList.add('is-invalid');
                                        return; // No continuar con el envío del formulario si la edad no es válida
                                    } else {
                                        document.getElementById('editEdadError').style.display = 'none';
                                        document.getElementById('editFechaNacimiento').classList.remove('is-invalid');
                                    }
                        
                                    // Lógica para verificar si el correo ya está en uso
                                    fetch('http://35.199.176.100/api/verificar_correo_editar', {
                                        method: 'POST',
                                        headers: {
                                            'Content-Type': 'application/json',
                                        },
                                        body: JSON.stringify({ correo: email, id_usuario: idUsuario })
                                    })
                                    .then(response => response.json())
                                    .then(data => {
                                        if (data.existe) {
                                            // Si el correo ya está en uso, mostrar mensaje de error
                                            document.getElementById('editCorreoError').style.display = 'block';
                                            document.getElementById('editCorreo').classList.add('is-invalid');
                                        } else {
                                            // Si el correo está disponible, enviar el formulario
                                            document.getElementById('editForm').submit();
                                        }
                                    })
                                    .catch(error => console.error('Error al verificar el correo:', error));
                                });
                            });
                        
                            // Función para calcular la edad
                            function calcularEdad(fechaNacimiento) {
                                const hoy = new Date();
                                const nacimiento = new Date(fechaNacimiento);
                                let edad = hoy.getFullYear() - nacimiento.getFullYear();
                                const mes = hoy.getMonth();
                                const dia = hoy.getDate();
                        
                                if (mes < nacimiento.getMonth() || (mes === nacimiento.getMonth() && dia < nacimiento.getDate())) {
                                    edad--;
                                }
                        
                                return edad;
                            }
                        </script>
                        
            
            
            
            
            <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.0/jspdf.umd.min.js"></script>
            <script src="https://cdn.jsdelivr.net/npm/html2canvas@1.4.1/dist/html2canvas.min.js"></script>



            <script>

                const { jsPDF } = window.jspdf;

                document.getElementById('exportPdf').addEventListener('click', () => {
                    const doc = new jsPDF();

                    html2canvas(document.querySelector('.table-responsive')).then(canvas => {
                        const imgData = canvas.toDataURL('image/png');
                        const imgWidth = 210;
                        const pageHeight = 295;
                        const imgHeight = canvas.height * imgWidth / canvas.width;
                        let heightLeft = imgHeight;
                        let position = 0;

                        doc.addImage(imgData, 'PNG', 0, position, imgWidth, imgHeight);
                        heightLeft -= pageHeight;

                        while (heightLeft >= 0) {
                            position = heightLeft - imgHeight;
                            doc.addPage();
                            doc.addImage(imgData, 'PNG', 0, position, imgWidth, imgHeight);
                            heightLeft -= pageHeight;
                        }

                        doc.save('usuarios.pdf');
                    });
                });
                function exportToExcel() {
                    let wb = XLSX.utils.table_to_book(document.getElementById('miTabla'), { sheet: "Usuarios" });
                    XLSX.writeFile(wb, 'usuarios.xlsx');
                }

                function confirmarEliminacion(id) {
                    console.log(`ID del usuario a eliminar: ${id}`);
                    Swal.fire({
                        title: '¿Estás seguro?',
                        text: "¡No podrás recuperar este usuario después de eliminarlo!",
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Sí, eliminar'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            fetch(`/eliminar/${id}`, {
                                method: 'DELETE'
                            })
                                .then(response => {
                                    if (!response.ok) {
                                        throw new Error('Error al eliminar el usuario');
                                    }
                                    return response.json();
                                })
                                .then(data => {
                                    console.log(data); // Verifica que se reciba el mensaje correcto
                                    Swal.fire(
                                        'Eliminado!',
                                        'El usuario ha sido eliminado.',
                                        'success'
                                    ).then(() => {
                                        window.location.reload();
                                    });
                                })
                                .catch(error => {
                                    console.error('Error en la eliminación:', error);
                                    Swal.fire(
                                        'Error!',
                                        'Ocurrió un error al eliminar el usuario.',
                                        'error'
                                    );
                                });
                        }
                    });
                }


            </script>
    </div>
</body>

</html>
<script type="text/javascript">
    $(document).ready(function() {
      // Inicialización de FullCalendar
      var calendar = $('#calendar').fullCalendar({
        header: {
          left: 'prev,next today',
          center: 'title',
          right: 'month,agendaWeek,agendaDay'
        },
        locale: 'es',
        defaultView: 'month',
        navLinks: true,
        editable: true,
        eventLimit: true,
        selectable: true,
        selectHelper: false,
    
        // Cargar eventos desde la API
        events: function(start, end, timezone, callback) {
          $.ajax({
            url: 'http://35.199.176.100/api/traer_eventos',
            dataType: 'json',
            success: function(data) {
              var events = data.map(function(event) {
                return {
                  _id: event.id_evento,
                  title: event.nombre_evento,
                  start: event.fecha_hora_inicio ? moment(event.fecha_hora_inicio).format('YYYY-MM-DDTHH:mm:ss') : '',
                  end: event.fecha_hora_final ? moment(event.fecha_hora_final).format('YYYY-MM-DDTHH:mm:ss') : '',
                  color: event.color_evento || '#378006',
                  descripcion: event.descripcion,
                  tipo_evento: event.tipo_evento,
                  ubicacion: event.ubicacion,
                  duracion: event.duracion || '',
                  id_curso: event.id_curso // Asegurarnos de que se incluya el campo curso
                };
              });
              callback(events);
            },
            error: function(jqXHR, textStatus, errorThrown) {
              console.error('Error al obtener eventos:', textStatus, errorThrown);
              Swal.fire('Error', 'No se pudieron cargar los eventos', 'error');
            }
          });
        },
    
        select: function(start, end) {
          $('#modalNuevoEvento').load('/modalNuevoEvento', function() {
            $('#exampleModal').modal('show');
    
            var fechaInicio = start.format('YYYY-MM-DDTHH:mm:ss');
            var fechaFin = end.format('YYYY-MM-DDTHH:mm:ss');
    
            $("input[name='fecha_inicio']").val(fechaInicio);
            $("input[name='fecha_fin']").val(fechaFin);
          });
        },
    
        // Renderizar eventos con el botón de eliminar
        eventRender: function(event, element) {
          element.find(".fc-content").prepend("<span class='closeon material-icons'>&#xe5cd;</span>");
          element.find(".closeon").on("click", function() {
            $('#actualizarEvento').modal('hide');
    
            Swal.fire({
              title: '¿Deseas borrar este evento?',
              icon: 'warning',
              showCancelButton: true,
              confirmButtonColor: '#3085d6',
              cancelButtonColor: '#d33',
              confirmButtonText: 'Sí, borrar',
              cancelButtonText: 'Cancelar'
            }).then((result) => {
              if (result.isConfirmed) {
                $('#calendar').fullCalendar("removeEvents", event._id);
                $.ajax({
                  type: 'DELETE',
                  url: 'http://35.199.176.100/api/eliminar_evento/' + event._id,
                  success: function() {
                    Swal.fire('Eliminado', 'El evento fue borrado correctamente.', 'success');
                  },
                  error: function() {
                    Swal.fire('Error', 'Error al eliminar el evento', 'error');
                  }
                });
              }
            });
          });
        },
    
        // Actualizar evento con drag & drop
        eventDrop: function(event) {
          var idEvento = event._id;
          var start = event.start ? event.start.format('YYYY-MM-DDTHH:mm:ss') : '';
          var end = event.end ? event.end.format('YYYY-MM-DDTHH:mm:ss') : start;
          var fechaActual = moment().format('YYYY-MM-DDTHH:mm:ss');
    
          if (start < fechaActual) {
            Swal.fire('Error', 'La fecha de inicio no puede ser anterior a la fecha actual.', 'error');
            $('#calendar').fullCalendar('refetchEvents');
            return;
          }
    
          if (end < start) {
            Swal.fire('Error', 'La fecha de finalización no puede ser anterior a la fecha de inicio.', 'error');
            $('#calendar').fullCalendar('refetchEvents');
            return;
          }
    
          $.ajax({
            url: `http://35.199.176.100/api/actualizar_evento/${idEvento}`,
            type: 'POST',
            data: {
              fecha_hora_inicio: start,
              fecha_hora_final: end,
              id_curso: event.id_curso // Asegurarnos de enviar el id_curso al actualizar
            },
            success: function(response) {
              Swal.fire('Actualizado', 'El evento fue actualizado correctamente.', 'success');
            },
            error: function(xhr) {
              Swal.fire('Error', 'Error al actualizar el evento: ' + xhr.responseText, 'error');
            }
          });
        },
    
        // Cargar modal para editar evento
        eventClick: function(event) {
      console.log('Event Clicked');
  
      // Asegúrate de que el modal se elimine cada vez que se haga clic en un evento
      $('#actualizarEvento').remove();
  
      // Cargar el contenido del modal
      $.get('/actualizarEvento', function(response) {
          $('body').append(response);
          
          // Mostrar el modal una vez que se haya cargado el contenido
          $('#actualizarEvento').modal('show');
  
          // Rellenar los campos del formulario con los datos del evento
          $('#idEventoUpdate').val(event._id || '');
          $('#nombre_eventoUpdate').val(event.title || '');
          $('#descripcionUpdate').val(event.descripcion || '');
          $('#tipo_eventoUpdate').val(event.tipo_evento || '');
          $('#ubicacionUpdate').val(event.ubicacion || '');
          $('#fecha_inicioUpdate').val(event.start ? event.start.format('YYYY-MM-DDTHH:mm:ss') : '');
          $('#fecha_finUpdate').val(event.end ? event.end.format('YYYY-MM-DDTHH:mm:ss') : '');
          $('#duracionUpdate').val(event.duracion || '');
          $('#cursoUpdate').val(event.id_curso || ''); // Cargar el curso en el modal de edición
      }).fail(function() {
          Swal.fire('Error', 'Error al cargar el contenido del modal de editar', 'error');
      });
  }
      });
    
      // Manejo del formulario de creación de eventos
      $(document).on('submit', '#formEvento', function(event) {
        event.preventDefault();
    
        var fechaInicio = $("input[name=fecha_inicio]").val();
        var fechaFin = $("input[name=fecha_fin]").val();
        var fechaActual = moment().format('YYYY-MM-DDTHH:mm:ss');
    
        if (fechaInicio < fechaActual) {
          Swal.fire('Error', 'La fecha de inicio no puede ser anterior a la fecha actual.', 'error');
          return;
        }
    
        if (fechaFin < fechaInicio) {
          Swal.fire('Error', 'La fecha de finalización no puede ser anterior a la fecha de inicio.', 'error');
          return;
        }
    
        $.ajax({
          type: $(this).attr('method'),
          url: $(this).attr('action'),
          data: $(this).serialize(),
          success: function() {
            $('#exampleModal').modal('hide');
            $('#calendar').fullCalendar('refetchEvents');
            Swal.fire('Registrado', 'El evento fue registrado correctamente.', 'success');
          },
          error: function() {
            Swal.fire('Error', 'Error al guardar el evento', 'error');
          }
        });
      });
    
      $(document).on('submit', '#formUpdateEvento', function(event) {
        event.preventDefault();
  
        var fechaInicio = $("input[name=fecha_inicioUpdate]").val();
        var fechaFin = $("input[name=fecha_finUpdate]").val();
        var fechaActual = moment().format('YYYY-MM-DDTHH:mm:ss');
  
        if (fechaInicio < fechaActual) {
          Swal.fire('Error', 'La fecha de inicio no puede ser anterior a la fecha actual.', 'error');
          return;
        }
  
        if (fechaFin < fechaInicio) {
          Swal.fire('Error', 'La fecha de finalización no puede ser anterior a la fecha de inicio.', 'error');
          return;
        }
  
        $.ajax({
          type: $(this).attr('method'),
          url: $(this).attr('action') + '/' + $('#idEventoUpdate').val(),
          data: $(this).serialize(),
          success: function() {
            $('#actualizarEvento').modal('hide');
            $('#calendar').fullCalendar('refetchEvents');
            Swal.fire('Actualizado', 'El evento fue actualizado correctamente.', 'success');
          },
          error: function() {
            Swal.fire('Error', 'Error al actualizar el evento', 'error');
          }
        });
      });
    });
  </script>